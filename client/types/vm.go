package types
type Disk struct {
    ID                 string        `json:"id"`
    Label              string        `json:"label"`
    ScsiID             interface{}   `json:"scsiId"`
    Enabled            bool          `json:"enabled"`
    WriteBps           int           `json:"writeBps"`
    ReadBps            int           `json:"readBps"`
    TotalBps           int           `json:"totalBps"`
    TotalIops          int           `json:"totalIops"`
    WriteIops          int           `json:"writeIops"`
    ReadIops           int           `json:"readIops"`
    Volume             Volume        `json:"volume"`
    BusModel           string        `json:"busModel"`
    Usage              float64       `json:"usage"`
    MonReadIops        float64       `json:"monReadIops"`
    MonWriteIops       float64       `json:"monWriteIops"`
    ReadThroughput     float64       `json:"readThroughput"`
    WriteThroughput    float64       `json:"writeThroughput"`
    ReadWriteModel     string        `json:"readWriteModel"`
    EnableNativeIO     bool          `json:"enableNativeIO"`
    L2CacheSize        int           `json:"l2CacheSize"`
}
type Nic struct {
    ID                 string        `json:"id"`
    AutoGenerated      bool          `json:"autoGenerated"`
    Name               string        `json:"name"`
    NolocalName        string        `json:"nolocalName"`
    InnerName          interface{}   `json:"innerName"`
    DevName            string        `json:"devName"`
    IP                 string        `json:"ip"`
    Netmask            string        `json:"netmask"`
    Gateway            string        `json:"gateway"`
    Mac                string        `json:"mac"`
    Model              string        `json:"model"`
    DeviceID           string        `json:"deviceId"`
    DeviceName         string        `json:"deviceName"`
    DeviceType         string        `json:"deviceType"`
    SwitchType         string        `json:"switchType"`
    VswitchID          string        `json:"vswitchId"`
    UplinkRate         int           `json:"uplinkRate"`
    UplinkBurst        int           `json:"uplinkBurst"`
    DownlinkRate       int           `json:"downlinkRate"`
    DownlinkBurst      int           `json:"downlinkBurst"`
    DownlinkQueue      interface{}   `json:"downlinkQueue"`
    Enable             bool          `json:"enable"`
    Status             string        `json:"status"`
    InboundRate        float64       `json:"inboundRate"`
    OutboundRate       float64       `json:"outboundRate"`
    ConnectStatus      bool          `json:"connectStatus"`
    VMName             interface{}   `json:"vmName"`
    VMID               interface{}   `json:"vmId"`
    VMStatus           interface{}   `json:"vmStatus"`
    VMTemplate         bool          `json:"vmTemplate"`
    NetworkName        string        `json:"networkName"`
    NetworkVlan        interface{}   `json:"networkVlan"`
    VlanRange          interface{}   `json:"vlanRange"`
    NetworkID          string        `json:"networkId"`
    NetworkType        interface{}   `json:"networkType"`
    HostIP             interface{}   `json:"hostIp"`
    HostStatus         interface{}   `json:"hostStatus"`
    HostID             interface{}   `json:"hostId"`
    DirectObjName      interface{}   `json:"directObjName"`
    TotalOctets        float64       `json:"totalOctets"`
    TotalDropped       float64       `json:"totalDropped"`
    TotalPackets       float64       `json:"totalPackets"`
    TotalBytes         float64       `json:"totalBytes"`
    TotalErrors        float64       `json:"totalErrors"`
    WriteOctets        float64       `json:"writeOctets"`
    WriteDropped       float64       `json:"writeDropped"`
    WritePackets       float64       `json:"writePackets"`
    WriteBytes         float64       `json:"writeBytes"`
    WriteErrors        float64       `json:"writeErrors"`
    ReadOctets         float64       `json:"readOctets"`
    ReadDropped        float64       `json:"readDropped"`
    ReadPackets        float64       `json:"readPackets"`
    ReadBytes          float64       `json:"readBytes"`
    ReadErrors         float64       `json:"readErrors"`
    SecurityGroups     interface{}   `json:"securityGroups"`
    AdvancedNetIP      interface{}   `json:"advancedNetIp"`
    PortID             interface{}   `json:"portId"`
    OpenstackID        interface{}   `json:"openstackId"`
    BindIPEnable       bool          `json:"bindIpEnable"`
    BindIP             interface{}   `json:"bindIp"`
    PriorityEnabled    bool          `json:"priorityEnabled"`
    NetPriority        interface{}   `json:"netPriority"`
    VMType             string        `json:"vmType"`
    SystemVMType       interface{}   `json:"systemVmType"`
    Dhcp               bool          `json:"dhcp"`
    DhcpIP             interface{}   `json:"dhcpIp"`
}

type Cdrom struct {
    Path               string        `json:"path"`
    Type               string        `json:"type"`
    Connected          bool          `json:"connected"`
    StartConnected     bool          `json:"startConnected"`
    CifsDto            interface{}   `json:"cifsDto"`
    DataStore          interface{}   `json:"dataStore"`
}

type GuestOsInfo struct {
    Model                  string    `json:"model"`
    SocketLimit            int       `json:"socketLimit"`
    SupportCPUHotPlug      bool      `json:"supportCpuHotPlug"`
    SupportMemHotPlug      bool      `json:"supportMemHotPlug"`
    SupportDiskHotPlug     bool      `json:"supportDiskHotPlug"`
    SupportUefiBootMode    bool      `json:"supportUefiBootMode"`
}

type VirtualMachine struct {
    ID                 string        `json:"id"`
    Name               string        `json:"name"`
    State              string        `json:"state"`
    Status             string        `json:"status"`
    HostID             string        `json:"hostId"`
    HostName           string        `json:"hostName"`
    HostIP             string        `json:"hostIp"`
    HostStatus         string        `json:"hostStatus"`
    HostMemory         float64       `json:"hostMemory"`
    DataCenterID       string        `json:"dataCenterId"`
    HaEnabled          bool          `json:"haEnabled"`
    RouterFlag         bool          `json:"routerFlag"`
    Migratable         bool          `json:"migratable"`
    ToolsInstalled     bool          `json:"toolsInstalled"`
    ToolsVersion       interface{}   `json:"toolsVersion"`
    ToolsType          string        `json:"toolsType"`
    Description        string        `json:"description"`
    HaMaxLimit         int           `json:"haMaxLimit"`
    Template           bool          `json:"template"`
    Initialized        bool          `json:"initialized"`
    GuestosLabel       string        `json:"guestosLabel"`
    GuestosType        string        `json:"guestosType"`
    GuestOsInfo        GuestOsInfo   `json:"guestOsInfo"`
    InnerName          string        `json:"innerName"`
    UUID               string        `json:"uuid"`
    MaxMemory          int           `json:"maxMemory"`
    Memory             int           `json:"memory"`
    MemoryUsage        float64       `json:"memoryUsage"`
    MemHotplugEnabled  bool          `json:"memHotplugEnabled"`
    CPUNum             int           `json:"cpuNum"`
    CPUSocket          int           `json:"cpuSocket"`
    CPUCore            int           `json:"cpuCore"`
    CPUUsage           float64       `json:"cpuUsage"`
    MaxCPUNum          int           `json:"maxCpuNum"`
    CPUHotplugEnabled  bool          `json:"cpuHotplugEnabled"`
    CPUModelType       string        `json:"cpuModelType"`
    CPUModelEnabled    bool          `json:"cpuModelEnabled"`
    RunningTime        float64       `json:"runningTime"`
    Boot               string        `json:"boot"`
    BootMode           string        `json:"bootMode"`
    SplashTime         int           `json:"splashTime"`
    StoragePriority    int           `json:"storagePriority"`
    Usb                interface{}   `json:"usb"`
    Usbs               []interface{} `json:"usbs"`
    Cdrom              Cdrom         `json:"cdrom"`
    Floppy struct {
        Path string                  `json:"path"`
    }                                `json:"floppy"`
    Disks              []Disk        `json:"disks"`
    Nics               []Nic         `json:"nics"`
    Gpus               []interface{} `json:"gpus"`
    VMPcis             []interface{} `json:"vmPcis"`
    ConfigLocation     string        `json:"configLocation"`
    HotplugEnabled     bool          `json:"hotplugEnabled"`
    VncPort            int           `json:"vncPort"`
    VncPasswd          string        `json:"vncPasswd"`
    VncSharePolicy     string        `json:"vncSharePolicy"`
    VcpuPin            string        `json:"vcpuPin"`
    VcpuPins           []string      `json:"vcpuPins"`
    CPUShares          int           `json:"cpuShares"`
    PanickPolicy       string        `json:"panickPolicy"`
    DataStoreID        interface{}   `json:"dataStoreId"`
    SdsdomainID        interface{}   `json:"sdsdomainId"`
    ClockModel         string        `json:"clockModel"`
    CPULimit           int           `json:"cpuLimit"`
    MemShares          int           `json:"memShares"`
    CPUReservation     int           `json:"cpuReservation"`
    MemReservation     int           `json:"memReservation"`
    LastBackup         interface{}   `json:"lastBackup"`
    VMType             string        `json:"vmType"`
    SystemVMType       interface{}   `json:"systemVmType"`
    MemBalloonEnabled  bool          `json:"memBalloonEnabled"`
    Completed          bool          `json:"completed"`
    GraphicsCardModel  string        `json:"graphicsCardModel"`
    GraphicsCardMemory int           `json:"graphicsCardMemory"`
    VMHostName         string   `json:"vmHostName"`
    DiskTotalSize      float64       `json:"diskTotalSize"`
    DiskUsedSize       float64       `json:"diskUsedSize"`
    DiskUsage          float64       `json:"diskUsage"`
    Tags               interface{}   `json:"tags"`
    StartPriority      string        `json:"startPriority"`
    OwnerName          string        `json:"ownerName"`
}

type VMPageResponse struct {
    PageResponse
    Items               []VirtualMachine         `json:"items"`
}

type VMPageReq struct {
    PageReq
}